class Particle{constructor(t,i,s,a){this.pos=createVector(t,i),this.vel=createVector(s,a),this.acc=createVector(0,-.1),this.radius=2}draw(){noStroke(),fill(255),ellipse(this.pos.x,height-this.pos.y,this.radius)}update(){this.vel.add(this.acc),this.pos.add(this.vel)}}class RainSplat{constructor(t){this.particles=[];for(let i=0;i<12;++i){const i=t.pos.x,s=0,a=random(-2,2),r=random(0,-1*t.vel.y/5);this.particles.push(new Particle(i,s,a,r))}}draw(){this.particles.forEach((t=>t.draw()))}update(){this.particles.forEach((t=>t.update()))}isVisible(){for(const t of this.particles)if(t.pos.y+t.radius>0)return!0;return!1}}class RainDrop{constructor(){this.reset(),this.acc=createVector(0,-.1),this.length=30,this.width=3}draw(){noStroke(),fill(255),rect(this.pos.x,height-this.pos.y,this.width,this.length)}update(){this.vel.add(this.acc),this.pos.add(this.vel)}hasHitFloor(){return this.pos.y-this.length<=0}reset(){this.pos=createVector(random(width),random(height+100,height+1e3)),this.vel=createVector(0,random(-8,-3))}}class Rain{constructor(t){this.rainDrops=[];for(let i=0;i<t;++i)this.rainDrops.push(new RainDrop);this.rainSplats=[]}draw(){this.rainDrops.forEach((t=>t.draw())),this.rainSplats.forEach((t=>t.draw()))}update(){this.rainDrops.forEach((t=>t.update())),this.rainSplats.forEach((t=>t.update()))}resolveCollisions(){this.rainDrops.forEach((t=>{t.hasHitFloor()&&(this.rainSplats.push(new RainSplat(t)),t.reset())}))}cullSplats(){for(let t=this.rainSplats.length-1;t>=0;--t)this.rainSplats[t].isVisible()||this.rainSplats.splice(t,1)}}let rain;function setup(){createCanvas(windowWidth,windowHeight),rain=new Rain(80)}function draw(){rain.update(),rain.resolveCollisions(),rain.cullSplats(),background("lightblue"),rain.draw()}function windowResized(){resizeCanvas(windowWidth,windowHeight)}